<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <AssemblyName>SeleniumGridManager.Web</AssemblyName>
    <RootNamespace>SeleniumGridManager.Web</RootNamespace>
    <StartupObject>SeleniumGridManager.Web.Program</StartupObject>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>..\SeleniumGridManager.snk</AssemblyOriginatorKeyFile>
    <Authors>György Balássy</Authors>
    <Company>György Balássy</Company>
    <Product>Selenium Grid Manager Web Console</Product>
    <PackageProjectUrl>https://github.com/balassy/SeleniumGridManager</PackageProjectUrl>
    <NeutralLanguage>en-US</NeutralLanguage>
    <CodeAnalysisRuleSet>..\SeleniumGridManager.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.0.6" />
    <PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers" Version="2.6.0" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.0.3" />
		<DotNetCliToolReference Include="Microsoft.DotNet.Xdt.Tools" Version="2.0.0" />
	</ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.3" />
  </ItemGroup>

  <ItemGroup>
    <!-- Files not to publish (note that the 'dist' subfolders are re-added below) -->
    <Content Remove="ClientApp\**" />
  </ItemGroup>

  <ItemGroup>
    <Content Remove="appsettings.Development.json" />
    <Content Remove="appsettings.json" />
    <Content Remove="npm-shrinkwrap.json" />
    <Content Remove="package.json" />
    <Content Remove="tsconfig.json" />
    <Content Remove="web.IIS.config" />
    <Content Remove="web.IIS.Release.config" />
    <Content Remove="web.Release.config" />
  </ItemGroup>

  <ItemGroup>
		<None Include="appsettings.Development.json" />
		<None Include="appsettings.json" />
		<None Include="npm-shrinkwrap.json" />
		<None Include="package.json" />
		<None Include="tsconfig.json" />
		<None Include="web.IIS.config" />
		<None Include="web.IIS.Release.config" />
  </ItemGroup>

  <Target Name="DebugRunWebpack" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('wwwroot\dist') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />

    <!-- In development, the dist files won't exist on the first run or when cloning to
         a different machine, so rebuild them if not already present. -->
    <Message Importance="high" Text="Performing first-run Webpack build..." />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js" />
    <Exec Command="node node_modules/webpack/bin/webpack.js" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Command="npm install" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js --env.prod" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --env.prod" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**; ClientApp\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

	<Target Name="ApplyXdtConfigTransform" BeforeTargets="_TransformWebConfig">
		<PropertyGroup>
			<_SourceWebConfig>$(MSBuildThisFileDirectory)Web.IIS.config</_SourceWebConfig>
			<_XdtTransform>$(MSBuildThisFileDirectory)Web.IIS.$(Configuration).config</_XdtTransform>
			<_TargetWebConfig>$(PublishDir)Web.config</_TargetWebConfig>
		</PropertyGroup>
		<Exec Command="dotnet transform-xdt --xml &quot;$(_SourceWebConfig)&quot; --transform &quot;$(_XdtTransform)&quot; --output &quot;$(_TargetWebConfig)&quot;" Condition="Exists('$(_XdtTransform)')" />
	</Target>
</Project>
